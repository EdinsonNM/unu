// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AprobacionIngresanteCtrl
    * @description
    * # FacultadesCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('AprobacionIngresanteCtrl', [
'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Ingresantes Registrados',
      editMode: false,
      selected: null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Ingresante',
      form:'views/aprobacion/form.html',
      route:'ingresantes',
      route_periodos: 'periodos',
      route_facultades: 'facultades',
      route_escuelas: 'escuelas'
    };
    service = Restangular.all(LOCAL.route);
    //serviceAprobarIngresante = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;
//
    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all(LOCAL.route_facultades);
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    var LoadPeriodos = function LoadPeriodos() {
      var servicePeriodo = Restangular.all(LOCAL.route_periodos);
      servicePeriodo.getList().then(function(data){
        $scope.periodos = data;
      });
    };
    $scope.LoadEscuelas = function LoadEscuelas(){
      var serviceEscuela = Restangular.all(LOCAL.route_escuelas);
      serviceEscuela.getList({
        conditions:{_facultad:$scope.filter._facultad._id},
        populate:'_facultad'
      }).then(function(data){
        $scope.escuelas = data;
      });
    };
//
    $scope.List = function() {
      console.log('listando');
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10,
        filter: {
          //_periodo: $scope.filter._periodo._id,
          _escuela: $scope.filter._escuela._id,
          estado: 'Registrado'
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
            /*
            $timeout(function() {
                if(result.data.length > 0){
                    params.total(result.data[0].length);
                    $defer.resolve(result.data[0].procesos);
                }else{
                    params.total(0);
                    $defer.resolve([]);
                }
              $scope.UI.refresh = false;
            }, 500);
            */
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.Approve = function Approve($event){
      //MessageFactory.Form.QuestionDelete
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content('¿Está seguro que desea aprobar a el(los) ingresante(s)?')
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = ($scope.UI.selected ? Restangular.copy($scope.UI.selected) : $scope.filter);
      $mdDialog.show(confirm).then(function() {
        service.customPOST(selected, 'updateEstadoAprIngresante').then(function() {
          ToastMD.info(MessageFactory.Form.Saved);
          $mdDialog.hide();
          $scope.Refresh();//$scope.tableParams.reload();//
        });
      }, function() {

      });
    };

    //new List();
    new LoadFacultades();
    new LoadPeriodos();
  }]);
}).call(this);
