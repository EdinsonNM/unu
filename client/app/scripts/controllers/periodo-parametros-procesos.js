// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
   * @ngdoc function
   * @name unuApp.controller:PlanestudiosCtrl
   * @description
   * # PlanestudiosCtrl
   * Controller of the unuApp
   */
  angular.module('unuApp').controller('PeriodoParametrosProcesosCtrl', [
    '$mdSidenav', '$q', 'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
    function($mdSidenav, $q, MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
      var List, serviceProcesoPeriodo, serviceParametroPeriodo;

      $scope.UI = {
        refresh: false,
        message: MessageFactory,
        title: 'Registro de Parametros y Procesos por Periodo',
        editMode: false,
        selected: null,
        customActions: []
      };

      var LOCAL = {
        name: 'Parametros y Procesos por Periodo',
        formProcesos: 'views/periodos/periodoprocesos-form.html',
        formParametros: 'views/periodos/periodoparametros-form.html',
        routeParametros: 'periodos',
        routeProcesos: 'periodos',
        route: 'periodos'
      };

      serviceProcesoPeriodo = Restangular.all(LOCAL.routeProcesos);
      serviceParametroPeriodo = Restangular.all(LOCAL.routeParametros);
      //service = Restangular.all(LOCAL.route);
      $rootScope.app.module = ' > ' + LOCAL.name;

      var LoadPeriodos = function LoadPeriodos() {
        var servicePeriodo = Restangular.all('periodos');
        servicePeriodo.getList().then(function(data) {
          $scope.periodos = data;
        });
      };
      new LoadPeriodos();

      $scope.List = function(){
          if($scope.selectedTab == 0){
              $scope.ListParametros();
              $scope.ListProcesos();
          }else{
              $scope.ListProcesos();
              $scope.ListParametros();
          }
      };

      $scope.ListParametros = function() {
        console.log("ListParametros");
        $scope.tableParamsParametros = new NgTableParams({
          page: 1,
          count: 10,
          filter: {
            _id: $scope.filter._periodo._id,
          }
        }, {
          total: 0,
          getData: function($defer, params) {
            var query;
            query = params.url();
            $scope.UI.refresh = true;
            serviceParametroPeriodo.customGET('methods/paramproc', query).then(function(result) {
              $timeout(function() {
                if (result.data.length > 0) {
                  params.total(result.data[0].length);
                  $defer.resolve(result.data[0].parametros);
                } else {
                  params.total(0);
                  $defer.resolve([]);
                }
                $scope.UI.refresh = false;
              }, 500);
            });
          }
        });
        $scope.tableParamsParametros.settings({
          counts: []
        });
      };

      $scope.ListProcesos = function() {
        $scope.tableParamsProcesos = new NgTableParams({
          page: 1,
          count: 10,
          filter: {
            _id: $scope.filter._periodo._id
          }
        }, {
          total: 0,
          getData: function($defer, params) {
            var query;
            query = params.url();
            $scope.UI.refresh = true;
            serviceProcesoPeriodo.customGET('methods/paramproc', query).then(function(result) {
              $timeout(function() {
                if (result.data.length > 0) {
                  params.total(result.data[0].length);
                  $defer.resolve(result.data[0].procesos);
                } else {
                  params.total(0);
                  $defer.resolve([]);
                }

                $scope.UI.refresh = false;
              }, 500);
            });
          }
        });
        $scope.tableParamsProcesos.settings({
          counts: []
        });
      };

      $scope.Refresh = function Refresh() {
        $scope.UI.selected = null;
        $scope.UI.editMode = false;
        $scope.tableParams.reload();
      };

      $scope.filter = {};
      $scope.New = function New($event) {
        if (!$scope.filter._periodo) {
          ToastMD.warning('Debe seleccionar un periodo antes de crear un plan de estudio');
          return;
        }

        var parentEl = angular.element(document.body);
        $mdDialog.show({
          parent: parentEl,
          targetEvent: $event,
          templateUrl: $scope.selectedTab == 0 ? LOCAL.formParametros : LOCAL.formProcesos,
          locals: {
            selectedTab: $scope.selectedTab,
            name: LOCAL.name,
            table: $scope.selectedTab == 0 ? $scope.tableParamsParametros : $scope.tableParamsProcesos,
            periodo: $scope.filter._periodo,
            serviceProcesoPeriodo: serviceProcesoPeriodo,
            serviceParametroPeriodo: serviceParametroPeriodo
          },
          controller: 'PeriodoParametrosProcesosNewCtrl'
        });
      };
      $scope.Edit = function Edit($event) {
        var parentEl = angular.element(document.body);
        $mdDialog.show({
          parent: parentEl,
          targetEvent: $event,
          templateUrl: LOCAL.form,
          locals: {
            name: LOCAL.name,
            table: $scope.tableParams,
            model: Restangular.copy($scope.UI.selected),
            escuela: $scope.filter._escuela
          },
          controller: 'PeriodoParametrosProcesosEditCtrl'
        });
      };

      $scope.Delete = function Delete($event) {
        var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

        var selected = Restangular.copy($scope.UI.selected);

        $mdDialog.show(confirm).then(function() {
          selected.remove().then(function() {
            $scope.Refresh();
            ToastMD.info(MessageFactory.Form.Deleted);
          });
        }, function() {

        });
      };

      $scope.EnabledEdit = function EnabledEdit(item) {
        $scope.UI.editMode = false;
        $scope.UI.selected = null;
        angular.forEach($scope.tableParams.data, function(element) {
          if (item._id !== element._id) {
            element.active = false;
          }
        });

        if (item.active) {
          $scope.UI.editMode = true;
          $scope.UI.selected = item;
          $scope.UI.selected.route = LOCAL.route;
        }
      };

      //new List();
    }
  ])

  .controller('PeriodoParametrosProcesosNewCtrl', [
      '$scope', 'name', 'table', 'periodo', 'selectedTab', 'serviceProcesoPeriodo', 'serviceParametroPeriodo', 'MessageFactory', 'Restangular', 'ToastMD', '$mdDialog',
      function($scope, name, table, periodo, selectedTab, serviceProcesoPeriodo, serviceParametroPeriodo, MessageFactory, Restangular, ToastMD, $mdDialog) {
        $scope._periodo = periodo;
        $scope.submited = false;
        $scope.title = MessageFactory.Form.New.replace('{element}', name);
        $scope.Buttons = MessageFactory.Buttons;
        $scope.message = MessageFactory.Form;

        $scope.model = {
          _periodo: periodo._id
        };
        $scope.Cancel = function() {
          $mdDialog.hide();
        };

        if (selectedTab == 0) { // Parametros
          Restangular.all('parametros').getList().then(function(data) {
            $scope.parametros = data;
          });

          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              serviceParametroPeriodo.customPOST($scope.model, 'updatePeriodoParametro').then(function() {
                ToastMD.info(MessageFactory.Form.Saved);
                $mdDialog.hide();
                table.reload();
              });
            }
          };

        } else { // Procesos
          Restangular.all('procesos').getList().then(function(data) {
            $scope.procesos = data;
          });
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              serviceProcesoPeriodo.customPOST($scope.model, 'updatePeriodoProceso').then(function() {
                ToastMD.info(MessageFactory.Form.Saved);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
        }
      }
    ])
    .controller('PeriodoParametrosProcesosEditCtrl', ['$scope', 'table', 'name', 'model', 'escuela', 'MessageFactory', 'Restangular', 'ToastMD', '$mdDialog',
      function($scope, table, name, model, escuela, MessageFactory, Restangular, ToastMD, $mdDialog) {
        $scope.escuela = escuela;
        $scope.submited = false;
        $scope.model = model;
        $scope.model.fecha_resolucion = new Date($scope.model.fecha_resolucion);
        $scope.title = MessageFactory.Form.Edit.replace('{element}', name);
        $scope.Buttons = MessageFactory.Buttons;
        Restangular.all('periodos').getList().then(function(data) {
          $scope.periodos = data;
        });
        $scope.Save = function(form) {
          $scope.submited = true;
          if (form.$valid) {
            $scope.model.put().then(function() {
              ToastMD.info(MessageFactory.Form.Updated);
              $mdDialog.hide();
              table.reload();
            });
          }
        };
        $scope.Cancel = function() {
          $mdDialog.hide();
        };
      }
    ]);

}).call(this);
