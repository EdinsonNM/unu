// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
   * @ngdoc function
   * @name unuApp.controller:FacultadesCtrl
   * @description
   * # FacultadesCtrl
   * Controller of the unuApp
   */
  angular.module('unuApp').controller('RptCursoGrupoCrtl', ['$mdSidenav',
    '$q',
    'MessageFactory',
    '$rootScope',
    '$scope',
    'Restangular',
    '$mdDialog',
    '$timeout',
    'NgTableParams',
    'LxDialogService',
    'ToastMD',
    '$mdBottomSheet',
    '$state',

    function($mdSidenav, $q, MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {

      var service,
        service1,
        service2,
        serviceFacultad,
        servicePeriodo,
        idcursoAprobado;


      $scope.UI = {
        refresh: false,
        message: MessageFactory,
        title: 'Reporte de Matriculados por Grupo',
        editMode: false,
        editModeGrupo: false,
        selected: null,
        customActions: []
      };



      var LOCAL = {
        name: 'Grupos por Cursos de Plan de Estudios',
        form: 'views/aprobacion/cursos/form-grupo.html',
        route: 'planestudiodetalles',
        route1: 'grupocursos',
        route2: 'cursoaperturadoperiodos'
      };

      service = Restangular.all(LOCAL.route);
      service1 = Restangular.all(LOCAL.route1);
      service2 = Restangular.all(LOCAL.route2);

      $rootScope.app.module = ' > ' + LOCAL.name;

      $scope.Detail = function Detail() {
        console.log('app.aprobacioncursosperiododetalle');
        $state.go('app.aprobacioncursosperiododetalle', {
          id: $scope.UI.selected._id
        });
      };

      var LoadFacultades = function LoadFacultades() {
        serviceFacultad = Restangular.all('facultades');
        serviceFacultad.getList().then(function(data) {
          $scope.facultades = data;
        });
      };
      var LoadPeriodos = function LoadPeriodos() {
        servicePeriodo = Restangular.all('periodos');
        servicePeriodo.getList().then(function(data) {
          $scope.periodos = data;
        });
      };
      $scope.LoadEcuelas = function LoadEcuelas() {
        var serviceEscuela = Restangular.all('escuelas');
        serviceEscuela.getList({
          conditions: {
            _facultad: $scope.filter._facultad._id
          }
        }).then(function(data) {
          $scope.escuelas = data;
        });
      };
      $scope.ListPlanEstudios = function ListPlanEstudios() {
        var servicePlanestudios = Restangular.all('planestudios');
        servicePlanestudios.getList({
            conditions: {
              _escuela: $scope.filter._escuela._id
            }
          })
          .then(function(data) {
            $scope.planestudios = data;
            console.log('PLanes de estudio:' + data);
          });
      };
      new LoadFacultades();
      new LoadPeriodos();

      $scope.ListGruposAprobados = function() {
        $scope.tableParams = new NgTableParams({
          page: 1,
          count: 1000,
          filter: {
            _periodo: $scope.filter._periodo._id
          }
        }, {
          total: 0,
          groupBy: function(item) {
            return item._planestudiodetalle.ciclo;
          },
          counts: [],
          getData: function($defer, params) {
            var query;
            query = params.url();
            $scope.UI.refresh = true;
            $scope.UI.refresh = true;
            service2.customGET('methods/paginate', query).then(function(result) {

              $timeout(function() {
                params.total(result.total);
                $defer.resolve(result.data);
                console.log(result);
                $scope.UI.refresh = false;
              }, 500);

            });
          }
        });
      };

      $scope.ListAllGruposCursos = function() {
        $scope.tableParamsGrupo = new NgTableParams({
          page: 1,
          count: 1000,
          filter: {
            _periodo: $scope.filter._periodo._id,
            _planestudio: $scope.filter._planestudios._id
          }
        }, {
          total: 0,
          groupBy: function(item) {
            return item._planestudiodetalle._curso.nombre;
          },
          counts: [],
          getData: function($defer, params) {
            var query;
            query = params.url();
            $scope.UI.refresh = true;
            $scope.UI.refresh = true;
            service2.customGET('methods/paginate/filtrado', query).then(function(result) {

              $timeout(function() {
                // params.total(result.total);
                $defer.resolve(result.data);
                console.log(result);
                $scope.UI.refresh = false;
              }, 500);

            });
          }
        });
      };

      $scope.ListGruposCursos = function(idCurso) {
        $scope.tableParamsGrupo = new NgTableParams({
          page: 1,
          count: 1000,
          filter: {

            _periodo: $scope.filter._periodo._id,
            _id: idCurso
          }
        }, {
          total: 0,
          groupBy: function(item) {

            return item._planestudiodetalle._curso.nombre;
          },
          counts: [],
          getData: function($defer, params) {
            var query;
            query = params.url();
            $scope.UI.refresh = true;

            $scope.UI.refresh = true;
            service2.customGET('methods/paginate', query).then(function(result) {

              $timeout(function() {
                //  params.total(result.total);
                $defer.resolve(result.data);
                console.log('resultado de list group curso', result);
                $scope.UI.refresh = false;
              }, 500);

            });
          }
        });
      };

      $scope.Refresh = function Refresh() {
        $scope.UI.selected = null;
        $scope.UI.editMode = false;
        $scope.UI.editModeGrupo = false;
        $scope.tableParams.reload();
        $scope.tableParamsGrupo.reload();
      };



      $scope.New = function New($event) {
        var parentEl = angular.element(document.body);
        $mdDialog.show({
          parent: parentEl,
          targetEvent: $event,
          templateUrl: LOCAL.form,
          locals: {
            name: LOCAL.name,
            table: $scope.tableParams,
            tableGrupos: $scope.tableParamsGrupo,
            service: service1,
            service2: service2,
            curso: idcursoAprobado,
            idFacultad: $scope.filter._facultad,
            idEscuela: $scope.filter._escuela,
            idPeriodo: $scope.filter._periodo,
          },
          controller: 'GrupoNewCtrl'
        });
      };

      $scope.Edit = function Edit($event,grupo) {
        var parentEl = angular.element(document.body);
        var model = Restangular.copy(grupo);
        $mdDialog.show({
          parent: parentEl,
          targetEvent: $event,
          templateUrl: LOCAL.form,
          locals: {
            name: LOCAL.name,
            table: $scope.tableParamsGrupo,
            model: model,
            idFacultad: $scope.filter._facultad,
            idEscuela: $scope.filter._escuela
          },
          controller: 'GrupoEditCtrl'
        });
      };

      $scope.Delete = function Delete($event) {
        var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

        var selected = Restangular.copy($scope.UI.selected);
        $mdDialog.show(confirm).then(function() {
          selected.remove().then(function() {
            $scope.Refresh();
            ToastMD.success(MessageFactory.Form.Deleted);
          });
        }, function() {

        });
      };


      // $scope.filter = {};

      $scope.EnabledEdit = function EnabledEdit(item, $groups) {
        console.log('Grupos' + $groups);
        $scope.UI.editMode = false;
        $scope.UI.selected = null;

        angular.forEach($groups, function(group) {
          angular.forEach(group.data, function(element) {
            if (item._id !== element._id) {
              console.log('element:', element);
              element.active = false;
            }
          });
        });

        if (item.active) {
          $scope.UI.editMode = true;
          $scope.UI.selected = item;
          idcursoAprobado = item._id;
          $scope.ListGruposCursos(idcursoAprobado);
        } else {
          $scope.ListAllGruposCursos();
        }

      };

      $scope.EnabledGroupEdit = function EnabledGroupEdit(item) {
        $scope.UI.grupoEditMode = false;
        $scope.UI.selected = null;
        // angular.forEach($groups,function(group){
        //   console.log('Group'+group);
        angular.forEach($scope.tableParamsGrupo.data, function(element) {
          console.log('item._id' + item._id);
          console.log('itemData:' + item.active);
          console.log('element:' + element);
          if (item._id !== element._id) {
            element.active = false;
          }
        });
        // });

        if (item.active) {
          $scope.UI.grupoEditMode = true;
          $scope.UI.selected = item;
        }

      };

      $scope.EnabledEditGrupo = function(item) {

        $scope.UI.editModeGrupo = false;
        $scope.UI.editMode = false;
        $scope.UI.selected = null;

        angular.forEach($scope.tableParamsGrupo.data, function(element) {
          angular.forEach(element.data, function(elem) {
            angular.forEach(elem._grupos, function(elm) {
              if (item._id !== elm._id) {
                elm.active = false;
              }
            });
          });
        });

        if (item.active) {
          $scope.UI.editMode = false;
          $scope.UI.editModeGrupo = true;
          $scope.UI.selected = item;
          $scope.UI.selected.route = 'grupocursos';
        }
      };

    }
  ])

  .controller('GrupoNewCtrl', ['$scope', 'table', 'tableGrupos', 'name', 'curso', 'idFacultad', 'idEscuela', 'idPeriodo', 'MessageFactory', 'service', 'service2', 'ToastMD', '$mdDialog', 'NgTableParams', '$timeout', 'Restangular',
    function($scope, table, tableGrupos, name, curso, idFacultad, idEscuela, idPeriodo, MessageFactory, service, service2, ToastMD, $mdDialog, NgTableParams, $timeout, Restangular) {
      console.log('idfacultad', idFacultad);
      console.log('idPeriodo', idPeriodo._id);

      $scope.submited = false;
      $scope.title = MessageFactory.Form.New.replace('{element}', name);
      $scope.Buttons = MessageFactory.Buttons;
      $scope.model = {};
      $scope.model._cursoAperturadoPeriodo = curso;
      console.log('Modelo Curso Aperturado ID' + $scope.model._cursoAperturadoPeriodo);

      //
      // $scope.grupocursos = function() {
      //   var serviceGrupo = Restangular.all('grupocursos');
      //   serviceGrupo.getList({
      //     conditions: {
      //       _cursoAperturadoPeriodo: curso
      //     }
      //   }).then(function(data) {
      //    console.log('data grupos', data);
      //     $scope.grupos = data;
      //     return data;
      //
      //    //  data._seccion;
      //
      //   });
      // };

      var LoadSecciones = function() {
         $scope.duplicate = false;
         $scope.secciones = [];
        var serviceSecciones = Restangular.all('secciones');
        serviceSecciones.getList({
          conditions: {
            _facultad: idFacultad._id,
            _escuela: idEscuela._id
          }
        }).then(function(data) {
           $scope.allsecciones = data;
           var serviceGrupo = Restangular.all('grupocursos');
           serviceGrupo.getList({
             conditions: {
               _cursoAperturadoPeriodo: curso
             }
           }).then(function(data) {
            console.log('data grupos', data);
             $scope.grupos = data;

             angular.forEach($scope.allsecciones, function(item){
              angular.forEach($scope.grupos, function (elem){
                 console.log('elem', elem._seccion);
                 console.log('item', item._id);
                 if(elem._seccion === item._id){
                    $scope.duplicate = true;
                 }
              });
              if(!$scope.duplicate){
                 $scope.secciones.push(item);
              }
               $scope.duplicate = false;
           });

           });
        });
      };

      new LoadSecciones();

      $scope.Save = function(form) {
        $scope.submited = true;
        if (form.$valid) {
          //declaro el servicio con la ruta correcta del endpoint.

          console.log($scope.model);
          service.post($scope.model).then(function() {
            ToastMD.info(MessageFactory.Form.Saved);
            $mdDialog.hide();
            //table.reload();
            tableGrupos.reload();
          }, function(error) {
            switch (error.status) {
              case 422:
                $scope.ValidationError = error.data;
                break;
              default:
            }

          }, function(result) {
            ToastMD.error(result.data.message);


          });
        }
      };
      $scope.Cancel = function() {
        $mdDialog.hide();
      };

    }
  ])

  .controller('GrupoEditCtrl', ['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog', 'Restangular', 'idFacultad', 'idEscuela',
    function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog, Restangular, idFacultad, idEscuela) {
      $scope.submited = false;
      $scope.model = model;
      $scope.title = MessageFactory.Form.Edit.replace('{element}', name);
      $scope.Buttons = MessageFactory.Buttons;

      var LoadSecciones = function() {
        var serviceSecciones = Restangular.all('secciones');
        serviceSecciones.getList({
          conditions: {
            _facultad: idFacultad,
            _escuela: idEscuela
          }
        }).then(function(data) {
          $scope.secciones = data;
        });
      };

      new LoadSecciones();

      $scope.Save = function(form) {
        $scope.submited = true;
        if (form.$valid) {
          $scope.model.route = 'grupocursos';
          //$scope.model.path = 'grupocursos';
          $scope.model.put().then(function() {
            ToastMD.success(MessageFactory.Form.Updated);
            $mdDialog.hide();
            table.reload();
          });
        }
      };
      $scope.Cancel = function() {
        $mdDialog.hide();
      };
    }
  ]);

}).call(this);
