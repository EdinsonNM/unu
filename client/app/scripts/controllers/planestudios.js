// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:FacultadesCtrl
    * @description
    * # FacultadesCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('PlanestudiosCtrl', function($q,MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Planes de Estudio',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Plan de Estudio',
      form:'views/planestudios/form.html',
      route:'planestudios'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    //custom actions: Es un array [{label:'Nombre Acci√≥n',onclick: function(){}}]
    $scope.UI.customActions.push({label:'Escuelas', onclick: function(){
      $state.go('app.escuelas', { id: $scope.UI.selected._id });
    }});
    //end custom actions

    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all('facultades');
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    $scope.LoadEcuelas = function LoadEcuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.filter._facultad._id},populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };

    $scope.ListPlanEstudios = function ListPlanEstudios(){
      //$scope.tableParams.reload();
      angular.extend($scope.tableParams.filter(), {_escuela:$scope.filter._escuela._id});
    };
    LoadFacultades();

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10,
        filter:{
          _escuela:0
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });

    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          escuela: $scope.filter._escuela
        },
        controller: function($scope, table,name,MessageFactory, escuela){
          $scope.escuela = escuela;
          $scope.submited = false;
          $scope.title = MessageFactory.Form.New.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.message = MessageFactory.Form;
          Restangular.all('periodos').getList().then(function(data){
            $scope.periodos = data;
          });
          $scope.model = {
            _escuela: escuela._id
          };
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              service.post($scope.model).then(function() {
                ToastMD.info(MessageFactory.Form.Saved);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected),
          escuela: $scope.filter._escuela
        },
        controller: function($scope, table,name, MessageFactory,model,escuela){
          $scope.escuela = escuela;
          $scope.submited = false;
          $scope.model = model;
          console.log(model);
          $scope.model.fecha_resolucion = new Date($scope.model.fecha_resolucion);
          $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          Restangular.all('periodos').getList().then(function(data){
            $scope.periodos = data;
          });
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              $scope.model.put().then(function() {
                ToastMD.info(MessageFactory.Form.Updated);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  });

}).call(this);
