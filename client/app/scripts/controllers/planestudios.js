// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:PlanestudiosCtrl
    * @description
    * # PlanestudiosCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('PlanestudiosCtrl', function($scope, Restangular, $timeout, ngTableParams, LxDialogService, LxNotificationService) {
    var AsignSelects, List, LoadFacultades, LoadPeriodos, SaveForm, UpdateForm, route, service;
    route = 'planestudios';
    service = Restangular.all(route);
    $scope.refresh = false;
    $scope.TitleForms = {
      New: 'Nuevo Plan de Estudios',
      Edit: 'Editar Plan de Estudios',
      List: 'Listado de Planes de Estudio',
      TitleDelete: 'Plan de Estudios',
      DescDelete: 'Desea eliminar el elemento seleccionado',
      saved: 'Registro satisfactorio',
      updated: 'Actualización Satisfactoria',
      deleted: 'Eliminación Satisfactoria'
    };
    $scope.filters = {
      facultad: void 0,
      escuela: void 0
    };
    $scope.selects = {
      periodo: void 0
    };
    LoadFacultades = function() {
      var localService;
      localService = Restangular.all('facultades');
      return localService.getList({}).then(function(result) {
        return $scope.facultades = result;
      });
    };
    LoadPeriodos = function() {
      var localService;
      localService = Restangular.all('periodos');
      return localService.getList({}).then(function(result) {
        return $scope.periodos = result;
      });
    };
    $scope.LoadEscuelas = function(newvalue, oldvalue) {
      var localService;
      console.log(newvalue);
      localService = Restangular.all('escuelas');
      return localService.getList({
        conditions: {
          _facultad: newvalue.newValue._id
        }
      }).then(function(result) {
        return $scope.escuelas = result;
      });
    };
    List = function() {
      return $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10,
        filter: {
          escuela_id: 0
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.refresh = true;
          return service.customGET('methods/paginate', query).then(function(result) {
            return $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              return $scope.refresh = false;
            }, 500);
          });
        }
      });
    };
    $scope.Reload = function(value) {
      console.log(value, $scope.tableParams);
      $scope.tableParams.$params.filter.escuela_id = value.newValue.id;
      return $scope.tableParams.reload();
    };
    $scope.New = function() {
      $scope.submited = false;
      console.log($scope.filters.facultad.nombre);
      $scope.TitleForm = $scope.TitleForms.New;
      $scope.model = {};
      LxDialogService.open('form');
      $scope.model.facultad = $scope.filters.facultad;
      $scope.model.escuela = $scope.filters.escuela;
      return $scope.Save = SaveForm;
    };
    $scope.Edit = function(item) {
      $scope.submited = false;
      $scope.TitleForm = $scope.TitleForms.Edit;
      $scope.model = Restangular.copy(item);
      LxDialogService.open('form');
      return $scope.Save = UpdateForm;
    };
    AsignSelects = function() {
      $scope.model.escuela_id = $scope.filters.escuela.id;
      return $scope.model.periodo_id = $scope.model.periodo.id;
    };
    SaveForm = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        AsignSelects();
        return service.post($scope.model).then(function(result) {
          LxNotificationService.info($scope.TitleForms.saved);
          LxDialogService.close('form');
          return $scope.tableParams.reload();
        });
      }
    };
    UpdateForm = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        AsignSelects();
        $scope.model.route = route;
        return $scope.model.put().then(function(result) {
          LxNotificationService.info($scope.TitleForms.updated);
          LxDialogService.close('form');
          return $scope.tableParams.reload();
        });
      }
    };
    $scope.Delete = function(item) {
      $scope.model = Restangular.copy(item);
      $scope.model.route = route;
      return LxNotificationService.confirm($scope.TitleForms.TitleDelete, $scope.TitleForms.DescDelete, {
        cancel: 'No',
        ok: 'Si'
      }, function(answer) {
        console.log($scope.model, answer);
        if (answer) {
          return $scope.model.remove().then(function() {
            $scope.tableParams.reload();
            return LxNotificationService.info($scope.TitleForms.deleted);
          });
        }
      });
    };
    $scope.closingDialog = function() {
      return angular.element('.dialog-filter').remove();
    };
    List();
    LoadFacultades();
    return LoadPeriodos();
  });

}).call(this);
