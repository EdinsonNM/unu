// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:SeccionesCtrl
    * @description
    * # SeccionesCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('SeccionesCtrl', ['$q', 'MessageFactory', '$rootScope','$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams', 'LxDialogService', 'ToastMD',
  function($q,MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var service;
    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Secciones',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'SecciÃ³n',
      form:'views/secciones/form.html',
      route:'secciones',
      routeFacultades: 'facultades',
      routeEscuelas: 'escuelas'
    };
    service = Restangular.all(LOCAL.route);

    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all(LOCAL.routeFacultades);
      serviceFacultad.getList().then(function(data){
        console.log(data);
        $scope.facultadesFilter = data;
      });
    };
    $scope.LoadEscuelas = function LoadEscuelas(){
      var serviceEscuela = Restangular.all(LOCAL.routeEscuelas);
      serviceEscuela.getList({
        conditions: { _facultad: $scope.filter._facultadFilter._id },
        populate: '_facultadFilter'
      }).then(function(data){
        $scope.escuelasFilter = data;
      });
    };

    $rootScope.app.module = ' > ' + LOCAL.name;

    $scope.List = function() {
      console.log('listando.......');
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10,
        filter: {
          _escuela: $scope.filter._escuelaFilter._id
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          service:service
          //escuelas: $scope.escuelas
        },
        controller: 'SeccionNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      var model = Restangular.copy($scope.UI.selected);//console.log(model);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: model
          //escuela: $scope.filter._escuela
        },
        controller: 'SeccionEditCtrl'
      });
    };
    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {
      });
    };
    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new LoadFacultades();
  }])
  .controller('SeccionNewCtrl',['$scope', 'table', 'name', 'MessageFactory', 'service', 'ToastMD', '$mdDialog', 'Restangular',
  function($scope, table, name, MessageFactory, service, ToastMD, $mdDialog, Restangular){
    $scope.includeUserData = true;
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    Restangular.all('escuelas').getList().then(function(data){
      $scope.escuelas = data;
    });
    /*
    var serviceFacultad = Restangular.all('facultades');
    serviceFacultad.getList().then(function(data){
      $scope.facultades = data;
    });
    $scope.LoadEscuelasFrm = function LoadEscuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.model._facultad._id}, populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };
    */
    $scope.model = {};
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])
  .controller('AlumnoEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog','Restangular',
  function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog, Restangular){
    $scope.includeUserData = false;
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    Restangular.all('escuelas').getList().then(function(data){
      $scope.escuelas = data;
    });
    /*
    $scope.LoadEscuelas = function LoadEscuelas(){
      var serviceEscuela = Restangular.all(route_escuelas);
      serviceEscuela.getList({conditions:{_facultad:$scope.model._facultad._id}, populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };
    var serviceFacultad = Restangular.all('facultades');
    serviceFacultad.getList({conditions:{_id:model._escuela._facultad}}).then(function(data){
      model._facultad = data[0];
      $scope.LoadEscuelas();
    });
    */
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);
