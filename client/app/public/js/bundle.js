//_app.js
// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc overview
    * @name unuApp
    * @description
    * # unuApp
    *
    * Main module of the application.
   */
  angular.module('unuApp', [
    'ngAnimate',
    'ngAria',
    'ngCookies',
    'ngMessages',
    'ngResource',
    'ngRoute',
    'ngSanitize',
    'ngTouch',
    'lumx',
    'ui.router',
    'restangular',
    'angular-loading-bar',
    'ngTable',
    'anim-in-out',
    'ngMaterial'
  ]).config(['$stateProvider', '$urlRouterProvider', 'RestangularProvider', '$httpProvider',function($stateProvider, $urlRouterProvider, RestangularProvider, $httpProvider) {
    RestangularProvider.setBaseUrl('/api');
    $httpProvider.interceptors.push('AuthInterceptor');
    RestangularProvider.setRestangularFields({ id: '_id' });
    $urlRouterProvider.otherwise('/');


    var ResolveSessionController = function(UserFactory, $q, $rootScope, TYPE_GROUP) {
      var deferred;
      deferred = $q.defer();
      UserFactory.getUser().then(function(result) {
        $rootScope.USER = result.user;
        switch ($rootScope.USER._grupo.codigo) {
          case TYPE_GROUP.MIC:
            $rootScope.app.name = 'M. Investigación Científica';
            break;
          default:
            $rootScope.app.name = 'Sistema de Matrícula';
        }
        deferred.resolve(true);
      });
      return deferred.promise;
    };

    ResolveSessionController.$inject = ['UserFactory', '$q', '$rootScope', 'TYPE_GROUP'];

    $stateProvider.state('app', {
      url: '/home',
      views: {
        '@':{
          templateUrl: 'views/app.html',
          controller: 'AppCtrl as vm'
        }
      },

      resolve: {
        DataResolve: ResolveSessionController
      }
    }).state('appalumno', {
      url: '/home-alumno',
      templateUrl: 'views/appalumno.html',
      controller: 'AppAlumnoCtrl',
      resolve: {
        DataResolve: function(UserFactory, OracleRestangular, $q, $rootScope) {
          var deferred;
          deferred = $q.defer();
          UserFactory.getUser().then(function(result) {
            var service;
            $rootScope.USER = result.user;
            service = OracleRestangular.all('alumno');
            service.customGET('', {
              'filter[cod_alumno]': $rootScope.USER.username
            }).then(function(result) {
              if (result.data.length > 0) {
                $rootScope.ALUMNO = result.data[0];
                deferred.resolve(true);
              }
            });
          });
          return deferred.promise;
        }
      }
    })
    .state('appalumno.inicio', {
      url: '/inicio',
      templateUrl: 'views/appalumno_inicio.html',
      controller: 'AppalumnoinicioCtrl'
    })
    .state('appalumno.matricula', {
      url: '/matricula',
      templateUrl: 'views/appalumno_matricula.html',
      controller: 'AppalumnomatriculaCtrl'
    })
    .state('appalumno.matricularegister', {
      url: '/matricula-register',
      templateUrl: 'views/appalumno_matricula_register.html',
      controller: 'AppalumnomatricularegisterCtrl'
    })
    .state('login', {
      url: '/',
      templateUrl: 'views/login.html',
      controller: 'LoginCtrl'
    })
    .state('app.facultad', {
      url: '/facultades',
      templateUrl: 'views/facultades/list.html',
      controller: 'FacultadesCtrl'
    })
    .state('app.escuelas', {
      url: '/facultades/:id/escuelas',
      templateUrl: 'views/escuelas/list.html',
      controller: 'EscuelasCtrl'
    })
    .state('app.aulas', {
    url: '/aulas',
    templateUrl: 'views/aulas/list.html',
    controller: 'AulasCtrl'
    })
    .state('app.pabellones', {
    url: '/pabellones',
    templateUrl: 'views/pabellones/list.html',
    controller: 'PabellonesCtrl'
    })
    .state('app.docentes', {
    url: '/docentes',
    templateUrl: 'views/docentes/list.html',
    controller: 'DocentesCtrl'
    })
    .state('app.alumnos', {
    url: '/alumnos',
    templateUrl: 'views/alumnos/list.html',
    controller: 'AlumnosCtrl'
    })
    .state('app.periodos', {
      url: '/periodos',
      templateUrl: 'views/periodos/list.html',
      controller: 'PeriodosCtrl'
    })
    .state('app.cursos', {
      url: '/cursos',
      templateUrl: 'views/cursos/list.html',
      controller: 'CursosCtrl'
    })
    .state('app.planestudios', {
      url: '/planestudios',
      templateUrl: 'views/planestudios/list.html',
      controller: 'PlanestudiosCtrl'
    })
    .state('app.planestudiodetalles', {
      url: '/planestudiodetalles/:id/detalles',
      templateUrl: 'views/planestudiodetalles/list.html',
      controller: 'PlanEstudioDetallesCtrl'
    })
    .state('app.matriculaingresanteconsolidadoporanio', {
      url: '/reporte/matricula/ingresante/consolidadoporanio',
      templateUrl: 'views/reports/matricula/ingresanteconsolidadoanio.html',
      controller: 'ReportsMatriculaIngresanteconsolidadoanioCtrl'
    })
    .state('app.matriculaingresanteconsolidadoporgenero', {
      url: '/reporte/matricula/ingresante/consolidadoporgenero',
      templateUrl: 'views/reports/matricula/ingresanteconsolidadogenero.html',
      controller: 'ReportsMatriculaIngresanteconsolidadogeneroCtrl'
    })
    .state('app.matriculaingresantesdetalle', {
      url: '/reporte/matricula/ingresante/detalle',
      templateUrl: 'views/reports/matricula/ingresantesdetalle.html',
      controller: 'ReportsMatriculaIngresantesdetalleCtrl'
    })
    .state('app.asignaraulas', {
      url: '/asignaraulas',
      templateUrl: 'views/asignaraulas/list.html',
      controller: 'AsignarAulasCtrl'
    })
    .state('app.inicio', {
      url: '/inicio',
      templateUrl: 'views/app_inicio.html',
      controller: 'AppInicioCtrl'
    })
    .state('app.aprobacionplanestudios', {
      url: '/aprobacion/planestudios',
      templateUrl: 'views/aprobacion/planestudios/list.html',
      controller: 'AprobacionPlanestudiosCtrl'
    })
    //inicio mic
    .state('app.mic_asignaturas', {
      url: '/mic/asignaturas',
      templateUrl: 'views/mic/asignaturas/list.html',
      controller: 'MICAsignaturasCtrl'
    })
    .state('app.mic_revisionplanestudios', {
      url: '/mic/revision-planestudios',
      templateUrl: 'views/mic/planestudios/list.html',
      controller: 'MICRevisionPlanEstudiosCtrl'
    })
    .state('app.mic_silabus', {
      url: '/mic/silabus',
      templateUrl: 'views/mic/silabus/list.html',
      controller: 'MICSilabusCtrl'
    })
    .state('app.mic_silabus_detalle', {
      url: '/mic/silabus/:id',
      templateUrl: 'views/mic/silabus/form.html',
      controller: 'MICSilabusDetalleCtrl'
    })
    .state('app.mic_revisionsilabus', {
      url: '/mic/revision-silabus',
      templateUrl: 'views/mic/revisionsilabus/list.html',
      controller: 'MICRevisionSilabusCtrl'
    })
    .state('app.sesionaprendizaje', {
      url: '/mic/sesionaprendizaje',
      templateUrl: 'views/mic/sesionaprendizaje/list.html',
      controller: 'MICSesionAprendizajeCtrl'
    })
    .state('app.mic_sesionaprendizaje_detalle', {
      url: '/mic/sesionaprendizaje/:id',
      templateUrl: 'views/mic/sesionaprendizaje/form.html',
      controller: 'MICSesionaprendizajeDetalleCtrl'
    });
  }]).constant('TYPE_ALUMNO', {
    INGRESANTE: 'ING'
  }).constant('TYPE_GROUP', {
    ADMIN: 'ADMIN',
    ALUMNO: 'ALUMNO',
    MIC: 'MIC'
  })
  //take all whitespace out of string
    .filter('nospace', function () {
      return function (value) {
        return (!value) ? '' : value.replace(/ /g, '');
      };
    })
    .value('scDateTimeConfig', {
		    defaultTheme: 'material',
		    autosave: false,
		    defaultMode: 'date',
		    defaultDate: undefined, //should be date object!!
		    displayMode: undefined,
		    defaultOrientation: false,
		    displayTwentyfour: false,
		    compact: false
		})
    //replace uppercase to regular case
    .filter('humanizeDoc', function () {
      return function (doc) {
        if (!doc) return;
        if (doc.type === 'directive') {
          return doc.name.replace(/([A-Z])/g, function ($1) {
            return '-' + $1.toLowerCase();
          });
        }

        return doc.label || doc.name;
      };
    });

}).call(this);

// _app-theme.js
(function() {
  'use strict';

  /**
    * @ngdoc overview
    * @name unuApp
    * @description
    * # unuApp
    *
    * Config Theme module of the application.
   */
  angular.module('unuApp')
  .config(['$mdThemingProvider',function($mdThemingProvider) {
    $mdThemingProvider
      .theme('default')
        .primaryPalette('teal', {
          'default': '600'
        })
        .accentPalette('pink', {
          'default': '500'
        })
        .warnPalette('defaultPrimary');

    $mdThemingProvider.theme('dark', 'default')
      .primaryPalette('defaultPrimary')
      .dark();

    $mdThemingProvider.theme('green', 'default')
      .primaryPalette('teal');

    $mdThemingProvider.theme('custom', 'default')
      .primaryPalette('defaultPrimary', {
        'hue-1': '50'
    });

    $mdThemingProvider.definePalette('defaultPrimary', {
      '50':  '#000000',
      '100': 'rgb(255, 198, 197)',
      '200': '#E75753',
      '300': '#E75753',
      '400': '#E75753',
      '500': '#E75753',
      '600': '#E75753',
      '700': '#E75753',
      '800': '#E75753',
      '900': '#E75753',
      'A100': '#E75753',
      'A200': '#E75753',
      'A400': '#E75753',
      'A700': '#E75753'
    });

  }]);

}).call(this);

// _app-run.js
(function() {
  'use strict';
  angular.module('unuApp')
  .run(['$rootScope',function($rootScope) {
    $rootScope.inProgress = false;
    $rootScope.app = {
      name: 'Sistema de Matrícula',
      module:'',
      corporation: 'Universidad Nacional de Ucayali',
      developer: 'Edinson Nuñez More',
      isTest: true
    };
    $rootScope.errors = {
      required: 'Campo es requerido',
      email: 'Campo email inválido',
      validateUnique: 'Valor ya registrado'
    };
    $rootScope.Buttons = {
      Save: 'Guardar',
      Cancel: 'Cancelar',
      New: 'Nuevo'
    };

  }]);

}).call(this);

(function(){
  'use strict';
  var controller =  function($scope,$state,  $mdSidenav){
    $scope.focusSection = function (section) {
      console.log(section);
      $state.go(section.url);
      $mdSidenav('left').toggle().then(function() {
      });
    };
  };
  controller.$inject=['$scope','$state', '$mdSidenav'];
  angular.module('unuApp')
    .run(['$templateCache', function ($templateCache) {
      $templateCache.put('partials/menu-link.tmpl.html',
        '<md-button ng-class="{\'{{section.icon}}\' : true}" \n' +
        ' ng-click="focusSection(section)">\n' +
        '  {{section.title}}\n' +
        '  <span  class="md-visually-hidden "\n' +
        '    ng-if="isSelected()">\n' +
        '    current page\n' +
        '  </span>\n' +
        '</md-button>\n' +
        '');
    }])
    .directive('menuLink',['$state',  '$mdSidenav', function ($state,  $mdSidenav) {
      return {
        scope: {
          section: '=',
          focusSection: '='
        },
        templateUrl: 'partials/menu-link.tmpl.html',
        controller:controller
      };
    }]);
})();


(function(){
  angular.module('unuApp')
    .run(['$templateCache', function($templateCache){
      $templateCache.put('partials/menu-toggle.tmpl.html',
        '<md-button class="md-button-toggle"\n' +
        '  ng-click="toggle(section)"\n' +
        '  aria-controls="side-menu-{{section.title | nospace}}"\n' +
        '  flex layout="row"\n' +
        '  aria-expanded="{{isOpen()}}">\n' +
        '  {{section.title}}\n' +
        '  <span aria-hidden="true" class=" pull-right fa fa-chevron-down md-toggle-icon"\n' +
        '  ng-class="{\'toggled\' : section.active}"></span>\n' +
        '</md-button>\n' +
        '<ul ng-show="section.active" id="side-menu-{{section.title | nospace}}" class="menu-toggle-list">\n' +
        '  <li ng-repeat="page in section.children">\n' +
        '    <menu-link section="page"></menu-link>\n' +
        '  </li>\n' +
        '</ul>\n' +
        '');
    }])
    .directive('menuToggle', function() {
      return {
        scope: {
          section: '=',
          toggle: '='
        },
        templateUrl: 'partials/menu-toggle.tmpl.html',
        link: function($scope) {
          $scope.isOpen = function() {
            return;
          };
          $scope.toggle = function(section) {
            section.active = !section.active;
          };
        }
      };
    });

})();

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc directive
    * @name unuApp.directive:navscroll
    * @description
    * # navscroll
   */
  angular.module('unuApp').directive('navScroll', ['$window',function($window) {
    return function(scope, element, attrs) {
      angular.element($window).bind("scroll", function() {
        if (this.pageYOffset > 155) {
          scope.boolChangeClass = true;
        } else {
          scope.boolChangeClass = false;
        }
        scope.$apply();
      });
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc directive
    * @name unuApp.directive:ValidateUnique
    * @description
    * # ValidateUnique
   */
  angular.module('unuApp').directive('validateUnique', ['Restangular','$timeout',function(Restangular,$timeout) {
    return {
      require: 'ngModel',
      scope: {
        attribute: '@',
        minlengthvalidation: '@',
        queryModel: '@',
        url: '@',
        filtertimeout:'='
      },
      link: function(scope, element, attrs, ctrl) {
        scope.minlengthvalidation = scope.minlengthvalidation || 0;
        var delay = function(callback){
          if (scope.filterTimeout){
            $timeout.cancel(scope.filterTimeout);
          }
          scope.filterTimeout = $timeout(function() {
            callback();
          },1000);
        };
        return ctrl.$parsers.unshift(function(value) {


          var localService;
          delay(function() {
            localService = Restangular.all(scope.queryModel);
              localService.customGET('/methods/validate-unique', {
                value: value,
                attribute:scope.attribute
              }).then(function(result) {
                if (result.success) {
                  return ctrl.$setValidity('validateUnique', true);
                } else {
                  return ctrl.$setValidity('validateUnique', false);
                }
              });
          });
          return value;
        });
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc service
    * @name unuApp.AuthInterceptor
    * @description
    * # AuthInterceptor
    * Service in the unuApp.
   */
  angular.module('unuApp').service('AuthInterceptor', ['AuthTokenFactory',function(AuthTokenFactory) {
    return {
      request: function(config) {
        var token;
        token = AuthTokenFactory.getToken();
        if (token) {
          config.headers = config.headers || {};
          config.headers.Authorization = 'unu ' + token;
        }
        return config;
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc service
    * @name unuApp.AuthTokenFactory
    * @description
    * # AuthTokenFactory
    * Service in the unuApp.
   */
  angular.module('unuApp').service('AuthTokenFactory', ['$window',function($window) {
    var key, store;
    store = $window.localStorage;
    key = 'auth-token';
    return {
      getToken: function() {
        return store.getItem(key);
      },
      setToken: function(token) {
        if (token) {
          store.setItem(key, token);
        } else {
          store.removeItem(key);
        }
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc service
    * @name unuApp.UserFactory
    * @description
    * # UserFactory
    * Service in the unuApp.
   */
  angular.module('unuApp').factory('MessageFactory', [function() {
    return {
      Buttons:{
        Add: 'Agregar',
        New: 'Nuevo',
        Edit: 'Editar',
        Delete: 'Eliminar',
        Save: 'Guardar',
        Cancel:'Cancelar',
        Yes:'Si',
        No:'No'
      },
      Form:{
        New:'Agregar {element}',
        Edit: 'Editar {element}',
        Delete: 'Eliminar {element}',
        Saved:'Registro satisfactorio',
        Updated:'Actualización satisfactoria',
        Deleted:'Se quito el elemento',
        QuestionDelete:'¿Desea eliminar el elemento seleccionado?',
        Required:'Campo es requerido',
        validateUnique:'Valor ya se encuentra registrado'
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc service
    * @name tramiteApp.UserFactory
    * @description
    * # UserFactory
    * Service in the tramiteApp.
   */
  angular.module('unuApp').factory('ToastMD',['$mdToast', function( $mdToast) {
    return {
      info: function info(message){
        $mdToast.show({
           template: '<md-toast><span class="tc-blue-900 fa fa-info-circle fa-lg"></span>&nbsp;' + message + '</md-toast>',
           hideDelay: 4000,
           position: 'top right'
        });
      },
      success: function success(message){
        $mdToast.show({
           template: '<md-toast><span class="tc-green-900 fa fa-check fa-lg"></span>&nbsp;' + message + '</md-toast>',
           hideDelay: 4000,
           position: 'top right'
        });
      },
      warning: function warning(message){
        $mdToast.show({
           template: '<md-toast><span class="tc-yellow-900 fa fa-exclamation-triangle fa-lg"></span>&nbsp;' + message + '</md-toast>',
           hideDelay: 4000,
           position: 'top right'
        });
      },
      error: function warning(message){
        $mdToast.show({
           template: '<md-toast><span class="tc-red-900 fa fa-exclamation-triangle fa-lg"></span>&nbsp;' + message + '</md-toast>',
           hideDelay: 4000,
           position: 'top right'
        });
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc service
    * @name unuApp.UserFactory
    * @description
    * # UserFactory
    * Service in the unuApp.
   */
  angular.module('unuApp').factory('UserFactory', ['Restangular', '$log', '$state', '$rootScope', 'AuthTokenFactory', 'ToastMD', '$timeout', 'TYPE_GROUP',function(Restangular, $log, $state, $rootScope, AuthTokenFactory, ToastMD, $timeout, TYPE_GROUP) {
    var service;
    service = Restangular.all('usuarios');
    return {
      login: function(user) {
        service.customPOST(user, 'auth/login').then(function(result) {
          var cservice;
          AuthTokenFactory.setToken(result.token);
          console.log(result);
          cservice = Restangular.all('usuarios');
          cservice.customGET('auth/me', {}).then(function(result) {
            var group;
            console.log(result.user);
            $rootScope.USER = result.user;
            group = $rootScope.USER._grupo.codigo;
            switch (group) {
              case TYPE_GROUP.ADMIN:
                $rootScope.app.name = 'Sistema de Matrícula';
                break;
              case TYPE_GROUP.MIC:
                $rootScope.app.name = 'M. Investigación Científica';
                break;
            }
            $state.go('app');
          });
        }, function(result) {
          ToastMD.warning(result.data.message);
        });
      },
      logout: function() {
        AuthTokenFactory.setToken();
        $state.go('login');
      },
      getUser: function() {
        if (AuthTokenFactory.getToken()) {
          return service.customGET('auth/me', {});
        } else {
          return {};
        }
      },
      getAccess: function() {
        return $rootScope.USER._grupo.menu;
      }
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AlumnosCtrl
    * @description
    * # AlumnosCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('AlumnosCtrl', [
  'MessageFactory', '$rootScope','$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  ,function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service, service_usuario;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Alumnos',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Alumno',
      form:'views/alumnos/form.html',
      route:'alumnos',
      route_usuarios:'usuarios'
    };
    service = Restangular.all(LOCAL.route);
    service_usuario = Restangular.all(LOCAL.route_usuarios);

    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams
        },
        controller: function($scope, table,name,MessageFactory){
          $scope.submited = false;
          $scope.title = MessageFactory.Form.New.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.message = MessageFactory.Form;
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              service.post($scope.model).then(function() {
                ToastMD.success(MessageFactory.Form.Saved);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: function($scope, table,name, MessageFactory,model){
          $scope.submited = false;
          $scope.model = model;
          $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              $scope.model.put().then(function() {
                ToastMD.success(MessageFactory.Form.Updated);
                $mdDialog.hide();
                table.reload();
              });


            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AppCtrl
    * @description
    * # AppCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp')
  .controller('AppCtrl', ['$scope', 'UserFactory', '$rootScope', '$mdSidenav', '$log', '$state',function($scope, UserFactory, $rootScope, $mdSidenav, $log, $state) {
    $rootScope.app.module ='';
    $rootScope.menu = UserFactory.getAccess();
    $scope.GoTo = function(item) {
      $rootScope.app.module = ' > ' + item.title;
      $state.go(item.url);
      return console.log(item.url);
    };
    $scope.SidenavToggle = function() {
      return $mdSidenav('left').toggle().then(function() {
        $log.debug('close sidenav');
      });
    };
    $scope.Logout = function() {
      UserFactory.logout();
    };

  }]);

})();

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:FacultadesCtrl
    * @description
    * # FacultadesCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('AprobacionPlanestudiosCtrl',
  ['$mdSidenav','$q','MessageFactory', '$rootScope','$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet','$state',
  function($mdSidenav,$q,MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Planes de Estudio',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Plan de Estudio',
      form:'views/planestudios/form.html',
      route:'planestudios'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    //custom actions: Es un array [{label:'Nombre Acción',onclick: function(){}}]
    $scope.UI.customActions.push({icon:'fa-book',label:'Detalle Plan de Estudio', onclick: function(){
      $state.go('app.planestudiodetalles', { id: $scope.UI.selected._id });
    }});
    $scope.UI.customActions.push({icon:'fa-send',label:'Enviar para aprobación', onclick: function(){
      var plan = Restangular.copy($scope.UI.selected);
      plan.estado = 'Pendiente';
      plan.put().then(function(){
        $scope.ListPlanEstudios();
      });
    }});
    //end custom actions




    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10,
        filter:{
          estado:'Pendiente'
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});

    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.filter = {};

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AulasCtrl
    * @description
    * # AulasCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('AsignarAulasCtrl', function(MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, LxDialogService, LxNotificationService, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Asignación de Aulas',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Asignación de Aulas',
      form:'views/asignaraulas/form.html',
      route:'asignaraulas',
      route_pabellones: 'pabellones',
      route_aulas: 'aulas',
      route_facultades: 'facultades',
      route_escuelas: 'escuelas',
      route_periodos: 'periodos'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    var service_facultades = Restangular.all(LOCAL.route_facultades);

    $scope.facultades = [];
    $scope.escuelas = [];
    $scope.pabellones = [];
    $scope.aulas = [];
    $scope.periodos = [];

    $scope.periodosSeleccionados = [];
    $scope.transformChip = transformChip;
    $scope.autocompleteDemoRequireMatch = true;
    $scope.selectedItem = null;
    $scope.searchText = null;
    $scope.querySearch = querySearch;

    var LoadPeriodos = function LoadPeriodos() {
      var servicePeriodos = Restangular.all(LOCAL.route_periodos);
      servicePeriodos.getList().then(function(data){
        $scope.periodos = data;
      });
    };
    var LoadPabellones = function LoadPabellones() {
      var servicePabellones = Restangular.all(LOCAL.route_pabellones);
      servicePabellones.getList().then(function(data){
        $scope.pabellones = data;
      });
    };
    $scope.LoadAulas = function LoadAulas(){
      var serviceAula = Restangular.all(LOCAL.route_aulas);
      serviceAula.getList({conditions:{_pabellon:$scope.filter._pabellon._id},populate:'_pabellon'}).then(function(data){
        $scope.aulas = data;
      });
    };
    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all(LOCAL.route_facultades);
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };


    LoadPabellones();
    LoadPeriodos();
    LoadFacultades();

    function transformChip(chip) {
      // If it is an object, it's already a known chip
      console.log(chip);
      if (angular.isObject(chip)) {
        return chip;
      }
      // Otherwise, create a new one
      return { name: chip, type: 'new' }
    }
    function querySearch (query) {
      var results = query ? $scope.periodos.filter(createFilterFor(query)) : [];
      console.log(results);
      return results;
    }
    function createFilterFor(query) {
      var lowercaseQuery = angular.lowercase(query);
      return function filterFn(periodo) {
        return (periodo.nombre.indexOf(lowercaseQuery) === 0) ||
            (periodo.periodo.indexOf(lowercaseQuery) === 0);
      };
    }

    $scope.horarios = [
      {ini: '7:00 am', fin: '8:00 am'},
      {ini: '8:00 am', fin: '9:00 am'},
      {ini: '9:00 am', fin: '10:00 am'},
      {ini: '10:00 am', fin: '11:00 am'},
      {ini: '11:00 am', fin: '12:00 am'},
      {ini: '12:00 am', fin: '1:00 pm'},
      {ini: '2:00 am', fin: '3:00 am'},
      {ini: '3:00 am', fin: '4:00 am'},
      {ini: '4:00 am', fin: '5:00 am'},
      {ini: '5:00 am', fin: '6:00 am'},
      {ini: '6:00 am', fin: '7:00 am'},
      {ini: '7:00 am', fin: '8:00 am'},
      {ini: '8:00 am', fin: '9:00 am'},
      {ini: '9:00 am', fin: '10:00 am'},
      {ini: '10:00 am', fin: '11:00 am'}
    ];


    $scope.handleCell = function($event, hora, aula){
      console.log(hora);
      console.log(aula);
      $scope.New($event, hora, aula);
    };

    $scope.New = function New($event, hora, aula){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          facultades: $scope.facultades,
          hora: hora,
          aula: aula
        },
        controller: function($scope, name, MessageFactory, facultades, hora, aula){
          $scope.facultades = facultades;
          $scope.submited = false;
          $scope.title = MessageFactory.Form.New.replace('{element}',name);
          $scope.model = {};
          $scope.model.aula = aula;
          $scope.model.horainicio = hora.ini;
          $scope.model.horafin = hora.fin;
          $scope.Buttons = MessageFactory.Buttons;
          $scope.message = MessageFactory.Form;
          $scope.LoadEcuelas = function LoadEcuelas(){
            var serviceEscuela = Restangular.all(LOCAL.route_escuelas);
            serviceEscuela.getList({conditions:{_facultad:$scope.model._facultad._id}, populate:'_facultad'}).then(function(data){
              $scope.escuelas = data;
            });
          };
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              service.post($scope.model).then(function() {
                ToastMD.info(MessageFactory.Form.Saved);
                $mdDialog.hide();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };

  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AulasCtrl
    * @description
    * # AulasCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('AulasCtrl', [
    'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD',
  function(MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Aulas',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Aula',
      form:'views/aulas/form.html',
      route:'aulas'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          service: service
        },
        controller: 'AulaNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'AulaEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])

  .controller('AulaNewCtrl',['$scope', 'table', 'name', 'MessageFactory', '$mdDialog', 'service', 'ToastMD', 'Restangular',
  function($scope, table, name, MessageFactory, $mdDialog, service, ToastMD, Restangular){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    Restangular.all('pabellones').getList().then(function(data){
      $scope.pabellones = data;
    });
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])

  .controller('AulaEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog',
  function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:CursosCtrl
    * @description
    * # CursosCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp')
  .controller('CursosCtrl', [
    'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
    function(MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Cursos',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Curso',
      form:'views/cursos/form.html',
      route:'cursos'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          service: service
        },
        controller: 'CursoNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'CursoEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])
  .controller('CursoNewCtrl', ['$scope', 'table', 'name', 'MessageFactory', 'service', 'ToastMD', '$mdDialog',
  function($scope, table, name, MessageFactory, service, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.info(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        }, function(error){
          switch (error.status) {
            case 422:
              $scope.ValidationError = error.data;
              break;
            default:
          }
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])
  .controller('CursoEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog',
    function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);
}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:DocentesCtrl
    * @description
    * # DocentesCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('DocentesCtrl', [
    'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Docentes',
      editMode: false,
      selected:null,
      customActions:[],
      tiposDedicacion: [],
      condiciones: []
    };

    var LOCAL ={
      name: 'Docente',
      form:'views/docentes/form.html',
      route:'docentes'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    service.customGET('model/tiposDedicacion', {}).then(function(result){
      $scope.UI.tiposDedicacion = result;
    });
    service.customGET('model/condiciones', {}).then(function(result){
      $scope.UI.condiciones = result;
    });
    service.customGET('model/grados', {}).then(function(result){
      $scope.UI.grados = result;
    });

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          condiciones: $scope.UI.condiciones,
          tiposDedicacion: $scope.UI.tiposDedicacion,
          grados: $scope.UI.grados,
          service: service
        },
        controller: 'DocenteNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'DocenteEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])

  .controller('DocenteNewCtrl',['$scope', 'table', 'name', 'condiciones', 'tiposDedicacion', 'grados', 'MessageFactory', '$mdDialog', 'service', 'ToastMD', 'Restangular',
  function($scope, table, name, condiciones, tiposDedicacion, grados, MessageFactory, $mdDialog, service, ToastMD, Restangular){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.condiciones= condiciones;
    $scope.tiposDedicacion= tiposDedicacion;
    $scope.gradosdocente = grados;
    Restangular.all('facultades').getList().then(function(data){
      $scope.facultades = data;
    });
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        },
        function(result){
          console.log(result);
          switch (result.status) {
            case 400:
            case 412:
                ToastMD.warning(result.data.message);
                break;
            case 500:
              ToastMD.error(result.data.message);
              break;
            default:
              ToastMD.warning(result.data.message);
          }
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };

  }])

  .controller('DocenteEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog', function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp')

  .controller('EscuelasCtrl', [
    '$stateParams', 'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
    function($stateParams, MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Escuelas',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {}
    };

    var LOCAL ={
      facultad_id: $stateParams.id,
      name: 'Escuela',
      form:'views/escuelas/form.html',
      route:'escuelas'
    };

    Restangular.one('facultades', LOCAL.facultad_id).get({single: true}).then(function(data){
      $scope.UI.facultad = data;
    });

    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10,
        filter: {_facultad: LOCAL.facultad_id}
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();

          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          service: service,
          name: LOCAL.name,
          table:$scope.tableParams,
          facultad: $scope.UI.facultad
        },
        controller: 'EscuelaNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'EscuelaEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();

  }])

  .controller('EscuelaNewCtrl' ,['$scope', 'table', 'name','MessageFactory','$mdDialog','service','ToastMD', 'facultad',
  function($scope, table, name, MessageFactory, $mdDialog, service, ToastMD, facultad){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.model = {_facultad: facultad};
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])

  .controller('EscuelaEditCtrl', ['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog',
  function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:FacultadesCtrl
    * @description
    * # FacultadesCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('FacultadesCtrl', [
'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Facultades',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Facultad',
      form:'views/facultades/form.html',
      route:'facultades'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    //custom actions: Es un array [{label:'Nombre Acción',onclick: function(){}}]
    $scope.UI.customActions.push({label:'Escuelas', onclick: function(){
      $state.go('app.escuelas', { id: $scope.UI.selected._id });
    }});
    //end custom actions

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          service: service,
          name: LOCAL.name,
          table:$scope.tableParams
        },
        controller:   'FacultadNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'FacultadEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);
      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])
  .controller('FacultadNewCtrl',['$scope', 'table', 'name', 'MessageFactory', '$mdDialog', 'service', 'ToastMD',
  function($scope, table, name, MessageFactory, $mdDialog, service, ToastMD){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };

  }])
  .controller('FacultadEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog',
  function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);
}).call(this);

(function(){
  'use strict';

  angular.module('unuApp')

    .controller('HomeCtrl',
      //function ($rootScope, $log, $state, $timeout, $location, menu) {
      function($scope, UserFactory, $rootScope, $mdSidenav, $log, $state, menu) {

        var vm = this;
        var aboutMeArr = ['Family', 'Location', 'Lifestyle'];
        var budgetArr = ['Housing', 'LivingExpenses', 'Healthcare', 'Travel'];
        var incomeArr = ['SocialSecurity', 'Savings', 'Pension', 'PartTimeJob'];
        var advancedArr = ['Assumptions', 'BudgetGraph', 'AccountBalanceGraph', 'IncomeBalanceGraph'];

        //functions for menu-link and menu-toggle
        vm.isOpen = isOpen;
        vm.toggleOpen = toggleOpen;
        vm.isSectionSelected = isSectionSelected;
        vm.autoFocusContent = false;
        vm.menu = menu;
        vm.close = close;

        console.log('menu: ', vm.menu);

        vm.status = {
          isFirstOpen: true,
          isFirstDisabled: false
        };

        $scope.close = function() {
          return $mdSidenav('left').toggle().then(function() {
            $log.debug('close sidenav');
          });
        }

        function isOpen(section) {
          return menu.isSectionSelected(section);
        }

        $scope.toggleOpen = function(section) {
          menu.toggleSelectSection(section);
        }

        function isSectionSelected(section) {
          var selected = false;
          var openedSection = menu.openedSection;
          if(openedSection === section){
            selected = true;
          }
          else if(section.children) {
            section.children.forEach(function(childSection) {
              if(childSection === openedSection){
                selected = true;
              }
            });
          }
          return selected;
        }

      })
})();

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:IngresantesCtrl
    * @description
    * # FacultadesCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('IngresantesCtrl', [
'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Ingresantes',
      editMode: false,
      selected: null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Ingresante',
      form:'views/facultades/form.html',
      route:'facultades'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          service: service,
          name: LOCAL.name,
          table:$scope.tableParams
        },
        controller: 'IngresanteNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'IngresanteEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);
      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])
  .controller('IngresanteNewCtrl',['$scope', 'table', 'name', 'MessageFactory', '$mdDialog', 'service', 'ToastMD', function($scope, table, name, MessageFactory, $mdDialog, service, ToastMD){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };

  }])
  .controller('IngresanteEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog', function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);
}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:LoginCtrl
    * @description
    * # LoginCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('LoginCtrl',['$scope', 'UserFactory', '$rootScope', function($scope, UserFactory, $rootScope) {
    $scope.Login = function() {
      UserFactory.login($scope.user);
    };
    $scope.Reset = function() {};
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:PabellonesCtrl
    * @description
    * # PabellonesCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('PabellonesCtrl', [
    'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'ngTableParams', 'ToastMD', '$mdBottomSheet', '$state',
  function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, ngTableParams, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Pabellones',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Pabellon',
      form:'views/pabellones/form.html',
      route:'pabellones'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          service: service
        },
        controller: 'PabellonNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'PabellonEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])

  .controller('PabellonNewCtrl',['$scope', 'table', 'name', 'MessageFactory', '$mdDialog', 'service', 'ToastMD',
  function($scope, table, name, MessageFactory, $mdDialog, service, ToastMD){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.success(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])

  .controller('PabellonEditCtrl',['$scope', 'table', 'name', 'MessageFactory', 'model', 'ToastMD', '$mdDialog',
  function($scope, table, name, MessageFactory, model, ToastMD, $mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.success(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:PeriodosCtrl
    * @description
    * # PeriodosCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('PeriodosCtrl',[
  'MessageFactory', '$rootScope','$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams',  'ToastMD',
   function(MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams,  ToastMD) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Periodos',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Periodo',
      form:'views/periodos/form.html',
      route:'periodos'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          service:service
        },
        controller: 'PeriodoNewCtrl'
      });
    };

    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: 'PeriodoEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();

  }])
  .controller('PeriodoNewCtrl',['$scope', 'table', 'name', 'MessageFactory','service','ToastMD','$mdDialog',
  function($scope, table, name, MessageFactory,service,ToastMD,$mdDialog){
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.info(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])
  .controller('PeriodoEditCtrl',['$scope', 'table','name', 'MessageFactory','model','ToastMD','$mdDialog',
  function($scope, table,name, MessageFactory,model,ToastMD,$mdDialog){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.info(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:PlanestudiosCtrl
    * @description
    * # PlanestudiosCtrl
    * Controller of the unuApp
   */
  angular.module('unuApp').controller('PlanestudiosCtrl',[
  '$mdSidenav', '$q', 'MessageFactory', '$rootScope', '$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams', 'LxDialogService', 'ToastMD', '$mdBottomSheet', '$state',
  function($mdSidenav, $q, MessageFactory, $rootScope, $scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD, $mdBottomSheet, $state) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Planes de Estudio',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Plan de Estudio',
      form:'views/planestudios/form.html',
      route:'planestudios'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;


    //custom actions: Es un array [{label:'Nombre Acción',onclick: function(){}}]
    $scope.UI.customActions.push({icon:'fa-book',label:'Detalle Plan de Estudio', onclick: function(){
      $state.go('app.planestudiodetalles', { id: $scope.UI.selected._id });
    }});
    $scope.UI.customActions.push({icon:'fa-send',label:'Enviar para aprobación', onclick: function(){
      var plan = Restangular.copy($scope.UI.selected);
      plan.estado = 'Pendiente';
      plan.put().then(function(){
        $scope.ListPlanEstudios();
      });
    }});
    //end custom actions



    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all('facultades');
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    $scope.LoadEcuelas = function LoadEcuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.filter._facultad._id},populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };

    $scope.ListPlanEstudios = function ListPlanEstudios(){
      angular.extend($scope.tableParams.filter(), {_escuela:$scope.filter._escuela._id});
      $scope.tableParams.reload();
    };
    new LoadFacultades();

    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10,
        filter:{
          _escuela:0
        }
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});

    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.filter = {};
    $scope.New = function New($event){
      if(!$scope.filter._escuela){
        ToastMD.warning('Debe seleccionar una escuela antes de crear un plan de estudio');
        return;
      }

      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          escuela: $scope.filter._escuela,
          service:service
        },
        controller: 'PlanestudiosNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected),
          escuela: $scope.filter._escuela
        },
        controller: 'PlanestudiosEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
  }])

  .controller('PlanestudiosNewCtrl',[
    '$scope', 'name', 'table', 'escuela', 'MessageFactory', 'service', 'Restangular', 'ToastMD', '$mdDialog',
  function($scope, name, table, escuela, MessageFactory, service, Restangular, ToastMD, $mdDialog){
    $scope.escuela = escuela;
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    Restangular.all('periodos').getList().then(function(data){
      $scope.periodos = data;
    });
    $scope.model = {
      _escuela: escuela._id
    };
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        service.post($scope.model).then(function() {
          ToastMD.info(MessageFactory.Form.Saved);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }])
  .controller('PlanestudiosEditCtrl',['$scope', 'table', 'name', 'model', 'escuela', 'MessageFactory', 'Restangular', 'ToastMD', '$mdDialog',
  function($scope, table, name, model, escuela, MessageFactory, Restangular, ToastMD, $mdDialog){
    $scope.escuela = escuela;
    $scope.submited = false;
    $scope.model = model;
    $scope.model.fecha_resolucion = new Date($scope.model.fecha_resolucion);
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    Restangular.all('periodos').getList().then(function(data){
      $scope.periodos = data;
    });
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.info(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('PlanEstudioDetallesCtrl', [
  '$mdSidenav','$q','$stateParams', 'MessageFactory', '$rootScope','$scope', 'Restangular', '$mdDialog', '$timeout', 'NgTableParams', 'LxDialogService', 'ToastMD',
  function($mdSidenav,$q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Plan de Estudios',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {}
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Detalle Plan de Estudios',
      form:'views/planestudiodetalles/form.html',
      route:'planestudiodetalles'
    };

    Restangular.one('planestudios', LOCAL.planestudioId).get({single: true,populate:'_periodo _escuela'}).then(function(data){
      $scope.UI.planestudios = data;
    });

    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    //custom actions: Es un array [{label:'Nombre Acción',onclick: function(){}}]
    $scope.UI.customActions.push({icon:'fa-comments-o',label:'Comentarios', onclick: function(){
      $state.go('app.planestudiodetalles', { id: $scope.UI.selected._id });
    }});

    $scope.ShowComments = function(){
      $mdSidenav('right')
          .toggle()
          .then(function () {
          });
    };
    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 1000,
        filter: {_planestudio: LOCAL.planestudioId}
      }, {
        total: 0,
        groupBy: 'ciclo',
         counts: [] ,
        getData: function($defer, params) {
          var query;
          query = params.url();

          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.getCreditosCiclo = function(data){
      var total = 0;
      angular.forEach(data,function(item){
        total+= item.creditos;
      });
      return total;
    };

    $scope.getHorasCiclo = function(data){
      var total = 0;
      angular.forEach(data,function(item){
        total+= item.horas_total;
      });
      return total;
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          planestudios: $scope.UI.planestudios
        },
        controller: 'PlanEstudioDetallesNewCtrl'
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected),
          planestudios: $scope.UI.planestudios
        },
        controller: 'PlanEstudioDetallesEditCtrl'
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item,$groups){
      console.log($groups);
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($groups,function(group){
        angular.forEach(group.data,function(element){
          if(item._id !== element._id){
            element.active = false;
          }
        });
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();

  }])
  .controller('PlanEstudioDetallesNewCtrl',['$scope', 'table', 'name', 'MessageFactory', 'planestudios', '$timeout','ToastMD','$mdDialog','Restangular',
  function($scope, table, name, MessageFactory, planestudios, $timeout,ToastMD,$mdDialog,Restangular){
    $scope.cursoFound = false;
    $scope.submited = false;
    $scope.title = MessageFactory.Form.New.replace('{element}',name);
    $scope.model = {_curso:{codigo:'',nombre:'',tipo:'Carrera'},_requisitos:[]};
    $scope.model._planestudio = planestudios._id;
    $scope.Buttons = MessageFactory.Buttons;
    $scope.message = MessageFactory.Form;
    var tempFilterText = '', filterTextTimeout;
    var serviceCurso = Restangular.all('cursos');
    var service = Restangular.all('planestudiodetalles');
    var LoadRequisitos = function(){
      service.getList({populate:'_curso',conditions:{_planestudio:planestudios._id}})
      .then(function(data){
        $scope.requisitos = data;
      });
    };

    $scope.FilterRequisitos = function(text){
      var data = [];
      angular.forEach($scope.requisitos,function(item){
        var index = item._curso.nombre.search(new RegExp(text,'i'));
        if(index>=0){
          data.push(item);
        }
      });
      return data;
    };
    $scope.AgregarRequisito = function(){
      $scope.model._requisitos.push($scope._requisito);
    };
    $scope.$watch('model._curso.codigo', function (val) {
      if(val.length>0){
        if (filterTextTimeout){
          $timeout.cancel(filterTextTimeout);
        }
        tempFilterText = val;
        filterTextTimeout = $timeout(function() {
            $scope.model._curso.codigo = tempFilterText;
            serviceCurso.getList({conditions:{ codigo:$scope.model._curso.codigo }}).then(function(data){
              if(data.length>0){
                $scope.model._curso = data[0];
                $scope.cursoFound = true;
              }else{
                $scope.model._curso = {codigo:tempFilterText};
                $scope.cursoFound = false;
              }
            });
        }, 1000);
      }
    });

    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        if(!$scope.cursoFound){
          serviceCurso.post($scope.model._curso).then(function(data){
            $scope.model._curso = data._id;
            new Save();
          });
        }else{
          new Save();
        }

      }
    };
    var Save = function(){
      service.post($scope.model).then(function() {
        ToastMD.info(MessageFactory.Form.Saved);
        $mdDialog.hide();
        table.reload();
      });
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };

    $scope.CalcularTotalHoras = function(){
      $scope.model.horas_total = parseInt($scope.model.horas_teoria) + parseInt($scope.model.horas_practica) + parseInt($scope.model.horas_laboratorio);
    };

    new LoadRequisitos();
  }])
  .controller('PlanEstudioDetallesEditCtrl',[function($scope, table,name, MessageFactory,model,planestudios,ToastMD,$mdDialog,Restangular){
    $scope.submited = false;
    $scope.model = model;
    $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
    $scope.Buttons = MessageFactory.Buttons;
    var service = Restangular.all('planestudiodetalles');
    var LoadRequisitos = function(){
      service.getList({populate:'_curso',conditions:{_planestudio:planestudios._id}})
      .then(function(data){
        $scope.requisitos = data;
      });
    };
    $scope.Save = function(form) {
      $scope.submited = true;
      if (form.$valid) {
        $scope.model.put().then(function() {
          ToastMD.info(MessageFactory.Form.Updated);
          $mdDialog.hide();
          table.reload();
        });
      }
    };
    $scope.AgregarRequisito = function(){
      $scope.model._requisitos.push($scope._requisito);
    };
    $scope.Cancel = function(){
      $mdDialog.hide();
    };

    $scope.CalcularTotalHoras = function(){
      $scope.model.horas_total = parseInt($scope.model.horas_teoria) + parseInt($scope.model.horas_practica) + parseInt($scope.model.horas_laboratorio);
    };

    new LoadRequisitos();
  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:AboutCtrl
    * @description
    * # AboutCtrl
    * Controller of the unuApp
   */
angular.module('unuApp').controller('SidenavCtrl', ['$scope','$rootScope','$mdSidenav',function($scope,$rootScope,$mdSidenav) {
    //console.log($rootScope.menu);

    this.autoFocusContent = false;

    this.isOpen = function isOpen(){
      //alert("Open");
    };
    $scope.close = function() {
      return $mdSidenav('left').toggle().then(function() {
      });
    };
    $scope.toggle = function() {
      return $mdSidenav('left').toggle().then(function() {
      });
    };
    $scope.toggleMenu = function() {
    };

  }]);

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICAsignaturasCtrl', function($q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Listado de Asignaturas',
      editMode: false,
      selected:null,
      customActions:[]
    };

    var LOCAL ={
      name: 'Asignatura',
      form:'views/mic/asignaturas/form.html',
      route:'mic_asignaturas'
    };
    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        total: 0,
        getData: function($defer, params) {
          var query;
          query = params.url();
          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.reload();
    };

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams
        },
        controller: function($scope, table,name,MessageFactory){
          $scope.submited = false;
          $scope.title = MessageFactory.Form.New.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.message = MessageFactory.Form;
          var tempFilterText = '', filterTextTimeout;
          var serviceCurso = Restangular.all('cursos');
          $scope.$watch('model._curso.codigo', function (val) {
            if(val.length>0){
              if (filterTextTimeout){
                $timeout.cancel(filterTextTimeout);
              }
              tempFilterText = val;
              filterTextTimeout = $timeout(function() {
                  $scope.model._curso.codigo = tempFilterText;
                  serviceCurso.getList({conditions:{ codigo:$scope.model._curso.codigo }}).then(function(data){
                    if(data.length>0){
                      $scope.model._curso = data[0];
                      $scope.cursoFound = true;
                    }else{
                      $scope.model._curso = {codigo:tempFilterText};
                      $scope.cursoFound = false;
                    }
                  });
              }, 1000);
            }
          });
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              var cursoId = $scope.model._curso._id;
              var data = angular.copy($scope.model);
              data._curso = cursoId;
              delete data.curso;
              service.post(data).then(function() {
                ToastMD.success(MessageFactory.Form.Saved);
                $mdDialog.hide();
                table.reload();
              },function(error){
                console.log(error);
                switch (error.status) {
                  case 422:
                    $scope.ValidationError = error.data;
                    break;
                  default:

                }
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: function($scope, table,name, MessageFactory,model){
          $scope.submited = false;
          $scope.model = model;
          $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              $scope.model.put().then(function() {
                ToastMD.success(MessageFactory.Form.Updated);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.success(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item){
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($scope.tableParams.data,function(element){
        if(item._id !== element._id){
          element.active = false;
        }
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();

  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICRevisionPlanEstudiosCtrl', function($q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var List, service, ListAsignaturas;




    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Validación del Plan de Estudios',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {},
      asignaturas:[],
      asignaturasNoexistentes:[]
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Validación del Plan de Estudios',
      form:'views/planestudiodetalles/form.html',
      route:'planestudiodetalles',
      routeAsignaturas:'mic_asignaturas',
      routePlan:'planestudios'
    };


    Restangular.one('planestudios', LOCAL.planestudioId).get({single: true}).then(function(data){
      $scope.UI.planestudios = data;
    });

    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all('facultades');
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    $scope.LoadEcuelas = function LoadEcuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.filter._facultad._id},populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };
    $scope.LoadPlanEstudios = function LoadPlanEstudios(){
      $scope.planes = [];
      var servicePlan = Restangular.all(LOCAL.routePlan);
      servicePlan.getList({conditions:{_escuela:$scope.filter._escuela._id},populate:'_escuela'}).then(function(data){
        $scope.planes = data;
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.filter({_planestudio: $scope.filter._planestudio._id});
      $scope.tableParams.reload();
    };




    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 500,
        filter: {_planestudio: 0}
      }, {
        total: 0,
        groupBy: 'ciclo',
        getData: function($defer, params) {
          var query;
          query = params.url();

          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    ListAsignaturas = function(){
      var service = Restangular.all(LOCAL.routeAsignaturas);
      service.getList({populate:{path:'_curso'}}).then(function(data){
        $scope.UI.asignaturas = data;
      });
    };


    $scope.RevisarPlan = function(){
      angular.forEach($scope.UI.asignaturas,function(asignatura){
        var existe = false;
        angular.forEach($scope.tableParams.data,function(group){
          angular.forEach(group.data,function(item){
              if(item._curso._id === asignatura._curso._id){
                item.existsAsignatura = true;
                existe = true;
              }
          });
        });
        if(!existe){
          $scope.UI.asignaturasNoexistentes.push(asignatura);
        }
      });
    };

  

    $scope.New = function New($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          planestudios: $scope.UI.planestudios
        },
        controller: function($scope, table, name, MessageFactory, planestudios, $timeout){
          $scope.cursoFound = false;
          $scope.submited = false;
          $scope.title = MessageFactory.Form.New.replace('{element}',name);
          $scope.model = {_curso:{codigo:'',nombre:'',tipo:'Carrera'}};
          $scope.model._planestudio = planestudios._id;
          $scope.Buttons = MessageFactory.Buttons;
          $scope.message = MessageFactory.Form;
          var tempFilterText = '', filterTextTimeout;
          var serviceCurso = Restangular.all('cursos');
          var service = Restangular.all('planestudiodetalles');
          $scope.$watch('model._curso.codigo', function (val) {
            if(val.length>0){
              if (filterTextTimeout){
                $timeout.cancel(filterTextTimeout);
              }
              tempFilterText = val;
              filterTextTimeout = $timeout(function() {
                  $scope.model._curso.codigo = tempFilterText;
                  serviceCurso.getList({conditions:{ codigo:$scope.model._curso.codigo }}).then(function(data){
                    if(data.length>0){
                      $scope.model._curso = data[0];
                      $scope.cursoFound = true;
                    }else{
                      $scope.model._curso = {codigo:tempFilterText};
                      $scope.cursoFound = false;
                    }
                  });
              }, 1000);
            }
          });

          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              if(!$scope.cursoFound){
                serviceCurso.post($scope.model._curso).then(function(data){
                  $scope.model._curso = data._id;
                  new Save();
                });
              }else{
                new Save();
              }

            }
          };
          var Save = function(){
            service.post($scope.model).then(function() {
              ToastMD.info(MessageFactory.Form.Saved);
              $mdDialog.hide();
              table.reload();
            });
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };
    $scope.Edit = function Edit($event){
      var parentEl = angular.element(document.body);
      $mdDialog.show({
        parent: parentEl,
        targetEvent: $event,
        templateUrl :LOCAL.form,
        locals:{
          name: LOCAL.name,
          table:$scope.tableParams,
          model: Restangular.copy($scope.UI.selected)
        },
        controller: function($scope, table,name, MessageFactory,model){
          $scope.submited = false;
          $scope.model = model;
          $scope.title = MessageFactory.Form.Edit.replace('{element}',name);
          $scope.Buttons = MessageFactory.Buttons;
          $scope.Save = function(form) {
            $scope.submited = true;
            if (form.$valid) {
              $scope.model.put().then(function() {
                ToastMD.info(MessageFactory.Form.Updated);
                $mdDialog.hide();
                table.reload();
              });
            }
          };
          $scope.Cancel = function(){
            $mdDialog.hide();
          };
        }
      });
    };

    $scope.Delete = function Delete($event){
      var confirm = $mdDialog.confirm()
          .title(LOCAL.name)
          .content(MessageFactory.Form.QuestionDelete)
          .ariaLabel(LOCAL.name)
          .targetEvent($event)
          .ok(MessageFactory.Buttons.Yes)
          .cancel(MessageFactory.Buttons.No);

      var selected = Restangular.copy($scope.UI.selected);

      $mdDialog.show(confirm).then(function() {
        selected.remove().then(function() {
          $scope.Refresh();
          ToastMD.info(MessageFactory.Form.Deleted);
        });
      }, function() {

      });
    };

    $scope.EnabledEdit =function EnabledEdit(item,$groups){
      console.log($groups);
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($groups,function(group){
        angular.forEach(group.data,function(element){
          if(item._id !== element._id){
            element.active = false;
          }
        });
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
    new LoadFacultades();
    new ListAsignaturas();

  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICSesionAprendizajeCtrl', function($state,$q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Sesión de Aprendizaje',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {},
      asignaturas:[],
      asignaturasNoexistentes:[]
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Registro de Silabus por Plan de Estudios',
      form:'views/sesionaprendizaje/form.html',
      route:'planestudiodetalles',
      routePlan:'planestudios'
    };

    Restangular.one('planestudios', LOCAL.planestudioId).get({single: true}).then(function(data){
      $scope.UI.planestudios = data;
    });

    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all('facultades');
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    $scope.LoadEcuelas = function LoadEcuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.filter._facultad._id},populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };
    $scope.LoadPlanEstudios = function LoadPlanEstudios(){
      $scope.planes = [];
      var servicePlan = Restangular.all(LOCAL.routePlan);
      servicePlan.getList({conditions:{_escuela:$scope.filter._escuela._id},populate:'_escuela'}).then(function(data){
        $scope.planes = data;
      });
    };



    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 500,
        filter: {_planestudio: 0}
      }, {
        total: 0,
        groupBy: 'ciclo',
        getData: function($defer, params) {
          var query;
          query = params.url();

          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.RevisarPlan = function(){
      angular.forEach($scope.UI.asignaturas,function(asignatura){
        var existe = false;
        angular.forEach($scope.tableParams.data,function(group){
          angular.forEach(group.data,function(item){
              if(item._curso._id === asignatura._curso._id){
                item.existsAsignatura = true;
                existe = true;
              }
          });
        });
        if(!existe){
          $scope.UI.asignaturasNoexistentes.push(asignatura);
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.filter({_planestudio: $scope.filter._planestudio._id});
      $scope.tableParams.reload();
    };


    $scope.Edit = function Edit($event){
      $state.go('app.mic_sesionaprendizaje_detalle',{id:$scope.UI.selected._id});
    };


    $scope.EnabledEdit =function EnabledEdit(item,$groups){
      console.log($groups);
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($groups,function(group){
        angular.forEach(group.data,function(element){
          if(item._id !== element._id){
            element.active = false;
          }
        });
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
    new LoadFacultades();

  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICSesionaprendizajeDetalleCtrl', function($q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var List, service, ListAsignaturas;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Registro de Sesión de Aprendizaje',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {},
      asignaturas:[],
      unidades:[]
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Sesión de Aprendizaje',
      form:'views/planestudiodetalles/form.html',
      route:'planestudiodetalles',
      routePlan:'planestudios'
    };
    $scope.AddUnidad = function(){
      $scope.UI.unidades.push({titulo:'',inicio:'',fin:''});
    }



  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICSilabusCtrl', function($state,$q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams) {
    var List, service;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Registro de Silabus por Plan de Estudios',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {},
      asignaturas:[],
      asignaturasNoexistentes:[]
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Registro de Silabus por Plan de Estudios',
      form:'views/planestudiodetalles/form.html',
      route:'planestudiodetalles',
      routePlan:'planestudios'
    };

    Restangular.one('planestudios', LOCAL.planestudioId).get({single: true}).then(function(data){
      $scope.UI.planestudios = data;
    });

    service = Restangular.all(LOCAL.route);
    $rootScope.app.module = ' > ' + LOCAL.name;

    var LoadFacultades = function LoadFacultades() {
      var serviceFacultad = Restangular.all('facultades');
      serviceFacultad.getList().then(function(data){
        $scope.facultades = data;
      });
    };
    $scope.LoadEcuelas = function LoadEcuelas(){
      var serviceEscuela = Restangular.all('escuelas');
      serviceEscuela.getList({conditions:{_facultad:$scope.filter._facultad._id},populate:'_facultad'}).then(function(data){
        $scope.escuelas = data;
      });
    };
    $scope.LoadPlanEstudios = function LoadPlanEstudios(){
      $scope.planes = [];
      var servicePlan = Restangular.all(LOCAL.routePlan);
      servicePlan.getList({conditions:{_escuela:$scope.filter._escuela._id},populate:'_escuela'}).then(function(data){
        $scope.planes = data;
      });
    };



    List = function() {
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 500,
        filter: {_planestudio: 0}
      }, {
        total: 0,
        groupBy: 'ciclo',
        getData: function($defer, params) {
          var query;
          query = params.url();

          $scope.UI.refresh = true;
          service.customGET('methods/paginate', query).then(function(result) {
            $timeout(function() {
              params.total(result.total);
              $defer.resolve(result.data);
              $scope.UI.refresh = false;
            }, 500);
          });
        }
      });
      $scope.tableParams.settings({counts:[]});
    };

    $scope.RevisarPlan = function(){
      angular.forEach($scope.UI.asignaturas,function(asignatura){
        var existe = false;
        angular.forEach($scope.tableParams.data,function(group){
          angular.forEach(group.data,function(item){
              if(item._curso._id === asignatura._curso._id){
                item.existsAsignatura = true;
                existe = true;
              }
          });
        });
        if(!existe){
          $scope.UI.asignaturasNoexistentes.push(asignatura);
        }
      });
    };

    $scope.Refresh = function Refresh(){
      $scope.UI.selected = null;
      $scope.UI.editMode = false;
      $scope.tableParams.filter({_planestudio: $scope.filter._planestudio._id});
      $scope.tableParams.reload();
    };


    $scope.Edit = function Edit($event){
      $state.go('app.mic_silabus_detalle',{id:$scope.UI.selected._id});
    };


    $scope.EnabledEdit =function EnabledEdit(item,$groups){
      console.log($groups);
      $scope.UI.editMode = false;
      $scope.UI.selected = null;
      angular.forEach($groups,function(group){
        angular.forEach(group.data,function(element){
          if(item._id !== element._id){
            element.active = false;
          }
        });
      });

      if( item.active ){
        $scope.UI.editMode = true;
        $scope.UI.selected = item;
        $scope.UI.selected.route = LOCAL.route;
      }
    };

    new List();
    new LoadFacultades();

  });

}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';

  /**
    * @ngdoc function
    * @name unuApp.controller:EscuelasCtrl
    * @description
    * # EscuelasCtrl
    * Controller of the unuApp
   */

  angular.module('unuApp').controller('MICSilabusDetalleCtrl', function($q,$stateParams, MessageFactory, $rootScope,$scope, Restangular, $mdDialog, $timeout, NgTableParams, LxDialogService, ToastMD) {
    var List, service, ListAsignaturas;

    $scope.UI = {
      refresh: false,
      message: MessageFactory,
      title: 'Registro de Silabus por Plan de Estudios',
      editMode: false,
      selected:null,
      customActions:[],
      facultad: {},
      asignaturas:[],
      unidades:[]
    };

    var LOCAL ={
      planestudioId: $stateParams.id,
      name: 'Registro de Silabus por Plan de Estudios',
      form:'views/planestudiodetalles/form.html',
      route:'planestudiodetalles',
      routePlan:'planestudios'
    };
    $scope.AddUnidad = function(){
      $scope.UI.unidades.push({titulo:'',inicio:'',fin:''});
    }



  });

}).call(this);
